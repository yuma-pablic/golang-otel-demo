receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"
  filelog:
    include_file_path: true
    include: [/logs/app.log]
    start_at: beginning
    operators:
      - type: time_parser
        id: parse_time
        parse_from: body.time
        layout_type: gotime
        layout: "2006-01-02T15:04:05.999999999Z07:00"


  hostmetrics:
    # Optional. Host Metrics Receiver added as an example of Infra Monitoring capabilities of the OpenTelemetry Collector
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/hostmetricsreceiver
    scrapers:
      load:
      memory:


processors:
  batch:

  attributes:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: "level,service_name"

  resource:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: "level,service_name"

exporters:
  otlp/grafana_cloud_traces:
    endpoint: "${env:GRAFANA_CLOUD_TEMPO_ENDPOINT}"
    tls:
      insecure: false
    auth:
      authenticator: basicauth/grafana_cloud_traces

  loki/grafana_cloud_logs:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/lokiexporter
    endpoint: "${env:GRAFANA_CLOUD_LOKI_URL}"
    tls:
      insecure: false
    auth:
      authenticator: basicauth/grafana_cloud_logs
  
  prometheusremotewrite/grafana_cloud_metrics:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/prometheusremotewriteexporter
    endpoint: "${env:GRAFANA_CLOUD_PROM_URL}"
    auth:
      authenticator: basicauth/grafana_cloud_metrics
    tls:
      insecure: false
    add_metric_suffixes: false
    remote_write_queue:
      enabled: True
      queue_size: 100000
      num_consumers: 50
  debug:
    verbosity: detailed

extensions:
  health_check:

  basicauth/grafana_cloud_traces:
    client_auth:
      username: "${env:GRAFANA_CLOUD_TEMPO_USERNAME}"
      password: "${env:GRAFANA_CLOUD_API_KEY}"
  basicauth/grafana_cloud_logs:
    client_auth:
      username: "${env:GRAFANA_CLOUD_LOKI_USERNAME}"
      password: "${env:GRAFANA_CLOUD_API_KEY}"
  basicauth/grafana_cloud_metrics:
    client_auth:
      username: "${env:GRAFANA_CLOUD_PROM_USERNAME}"
      password: "${env:GRAFANA_CLOUD_API_KEY}"

connectors:
  grafanacloud:
    host_identifiers: ["host.name"]

service:
  extensions:
    - health_check
    - basicauth/grafana_cloud_traces
    - basicauth/grafana_cloud_logs
    - basicauth/grafana_cloud_metrics

  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/grafana_cloud_traces,grafanacloud]

    logs:
      receivers: [filelog]
      processors: [batch,resource, attributes]
      exporters: [loki/grafana_cloud_logs,debug]
    
    metrics:
      receivers: [otlp,hostmetrics]
      processors: [batch]
      exporters: [prometheusremotewrite/grafana_cloud_metrics]
    
    metrics/grafanacloud:
      receivers: [grafanacloud]
      processors: [batch]
      exporters: [prometheusremotewrite/grafana_cloud_metrics]

